fn selection_sort(arr)
	n = len(arr)
	
	for	i in range(0, n)
		k = i
		for j in range(i + 1, n)
			if (arr[j] < arr[k])
				k = j
		arr[i], arr[k] = arr[k], arr[i] 

fn bobble_sort(arr)
	n = len(arr)
	
	for i in range(1, n)
		for j in range(0, n - i)
			if (arr[j] > arr[j + 1])
				arr[j], arr[j + 1] = arr[j + 1], arr[j] 

fn insertion_sort(arr)
	n = len(arr)

	for i in range(0, n - 1)
		j = i
		while j > 0 and arr[j] < arr[j + 1]
			arr[j], arr[j + 1] = arr[j + 1], arr[j]
			j -= 1

fn binary_insertion_sort(arr)

fn quick_sort(arr)

fn merge_sort(arr)

fn heap_sort(arr)

fn tim_sort(arr)